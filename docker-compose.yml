version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: scale_db
    environment:
      POSTGRES_DB: ${DB_NAME:-scale}
      POSTGRES_USER: ${DB_USER:-scale}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scale}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - scale_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: scale_backend
    env_file:
      - ./.env
    environment:
      # Garante que o host do banco aponte para o serviço "db" da rede
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn conf.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - staticfiles:/app/staticfiles
      - media:/app/media
    networks:
      - scale_net
    restart: unless-stopped

  # Frontend em Vite: imagem deve gerar o build e servir com 'vite preview' (porta 4173)
  frontend:
    build:
      context: ./frontend
    container_name: scale_frontend
    env_file:
      - ./.env
    expose:
      - "4173"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4173 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - backend
    networks:
      - scale_net
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    container_name: scale_nginx
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "127.0.0.1:8091:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Nginx servindo estáticos e mídias direto dos volumes coletados pelo Django
      - staticfiles:/staticfiles:ro
      - media:/media:ro
    networks:
      - scale_net
    restart: unless-stopped

networks:
  scale_net:

volumes:
  pgdata:
  staticfiles:
  media:
